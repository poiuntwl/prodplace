services:
  reverse-proxy:
    image: reverse-proxy
    build:
      context: .
      dockerfile: ./ProxyService/Dockerfile
      args:
        PROJECT_NAME: ProxyService
    networks:
      - prodplace
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - PROJECT_NAME=ProxyService
    ports:
      - "44303:8080"

  products-service:
    image: products-service
    build:
      context: .
      dockerfile: ./ProductsService/Dockerfile
      args:
        PROJECT_NAME: ProductsService
    depends_on:
      products-db:
        condition: service_healthy
      rbmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/health || exit 1" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s
    networks:
      - prodplace
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - PROJECT_NAME=ProductsService

  price-service:
    image: price-service
    build:
      context: .
      dockerfile: ./PriceService/Dockerfile
      args:
        PROJECT_NAME: PriceService
    networks:
      - prodplace
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - PROJECT_NAME=PriceService

  currency-rates-service:
    image: currency-rates-service
    build:
      context: .
      dockerfile: ./CurrencyRatesService/Dockerfile
      args:
        PROJECT_NAME: CurrencyRatesService
    depends_on:
      currencies-db:
        condition: service_healthy
      redis-cache:
        condition: service_healthy
    networks:
      - prodplace
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - PROJECT_NAME=CurrencyRatesService

  identity-service:
    image: identity-service
    build:
      context: .
      dockerfile: ./IdentityService/Dockerfile
    depends_on:
      identity-db:
        condition: service_healthy
    networks:
      - prodplace
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - PROJECT_NAME=IdentityService

  playground-service:
    image: playground-service
    build:
      context: .
      dockerfile: ./PlaygroundService/Dockerfile
      args:
        PROJECT_NAME: PlaygroundService
    depends_on:
      redis-cache:
        condition: service_healthy
    networks:
      - prodplace
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - PROJECT_NAME=PlaygroundService